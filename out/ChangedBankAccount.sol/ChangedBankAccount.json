{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506101f5806100206000396000f3fe60806040526004361061003f5760003560e01c806312065fe01461004457806327e235e3146100745780632e1a7d4d146100a1578063d0e30db0146100c3575b600080fd5b34801561005057600080fd5b50336000908152602081905260409020545b60405190815260200160405180910390f35b34801561008057600080fd5b5061006261008f366004610134565b60006020819052908152604090205481565b3480156100ad57600080fd5b506100c16100bc366004610164565b6100cb565b005b6100c161010e565b33600090815260208190526040902054811161010b573360009081526020819052604081208054839290610100908490610193565b9091555061010b9050565b50565b336000908152602081905260408120805434929061012d9084906101ac565b9091555050565b60006020828403121561014657600080fd5b81356001600160a01b038116811461015d57600080fd5b9392505050565b60006020828403121561017657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101a6576101a661017d565b92915050565b808201808211156101a6576101a661017d56fea26469706673582212206e91ec47e13afa4e078ce89d0dfa9411e6539a28a32e4b15de135d256f2a6a3364736f6c63430008130033",
    "sourceMap": "61:858:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061003f5760003560e01c806312065fe01461004457806327e235e3146100745780632e1a7d4d146100a1578063d0e30db0146100c3575b600080fd5b34801561005057600080fd5b50336000908152602081905260409020545b60405190815260200160405180910390f35b34801561008057600080fd5b5061006261008f366004610134565b60006020819052908152604090205481565b3480156100ad57600080fd5b506100c16100bc366004610164565b6100cb565b005b6100c161010e565b33600090815260208190526040902054811161010b573360009081526020819052604081208054839290610100908490610193565b9091555061010b9050565b50565b336000908152602081905260408120805434929061012d9084906101ac565b9091555050565b60006020828403121561014657600080fd5b81356001600160a01b038116811461015d57600080fd5b9392505050565b60006020828403121561017657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156101a6576101a661017d565b92915050565b808201808211156101a6576101a661017d56fea26469706673582212206e91ec47e13afa4e078ce89d0dfa9411e6539a28a32e4b15de135d256f2a6a3364736f6c63430008130033",
    "sourceMap": "61:858:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;818:98;;;;;;;;;;-1:-1:-1;897:10:0;861:7;888:20;;;;;;;;;;;818:98;;;160:25:27;;;148:2;133:18;818:98:0;;;;;;;96:43;;;;;;;;;;-1:-1:-1;96:43:0;;;;;:::i;:::-;;;;;;;;;;;;;;;242:568;;;;;;;;;;-1:-1:-1;242:568:0;;;;;:::i;:::-;;:::i;:::-;;148:86;;;:::i;242:568::-;307:10;298:8;:20;;;;;;;;;;;:30;-1:-1:-1;294:509:0;;354:10;345:8;:20;;;;;;;;;;:30;;369:6;;345:8;:30;;369:6;;345:30;:::i;:::-;;;;-1:-1:-1;294:509:0;;-1:-1:-1;294:509:0;;242:568;:::o;148:86::-;202:10;193:8;:20;;;;;;;;;;:33;;217:9;;193:8;:33;;217:9;;193:33;:::i;:::-;;;;-1:-1:-1;;148:86:0:o;196:286:27:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:27;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:27:o;487:180::-;546:6;599:2;587:9;578:7;574:23;570:32;567:52;;;615:1;612;605:12;567:52;-1:-1:-1;638:23:27;;487:180;-1:-1:-1;487:180:27:o;672:127::-;733:10;728:3;724:20;721:1;714:31;764:4;761:1;754:15;788:4;785:1;778:15;804:128;871:9;;;892:11;;;889:37;;;906:18;;:::i;:::-;804:128;;;;:::o;1069:125::-;1134:9;;;1155:10;;;1152:36;;;1168:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "balances(address)": "27e235e3",
    "deposit()": "d0e30db0",
    "getBalance()": "12065fe0",
    "withdraw(uint256)": "2e1a7d4d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ChangedBankAccount.sol\":\"ChangedBankAccount\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-contracts/=node_modules/@openzeppelin/contracts/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\",\":halmos/=lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/ChangedBankAccount.sol\":{\"keccak256\":\"0x357c6ba9d9a3551ab4dd0670d41320487a3e4c4b6ab36cc548fbda593bb8350f\",\"license\":\"None\",\"urls\":[\"bzz-raw://29019a2df889e8cc1f8a2cc893d22a8a2896c2417486d2205370517883b0232b\",\"dweb:/ipfs/QmP3WytUTeJcWJJeTiKQM2XyzZ2HY4W2ivevj8QTUPVvZ9\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balances",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin-contracts/=node_modules/@openzeppelin/contracts/",
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/halmos-cheatcodes/src/",
        "halmos/=lib/halmos-cheatcodes/src/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/ChangedBankAccount.sol": "ChangedBankAccount"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/ChangedBankAccount.sol": {
        "keccak256": "0x357c6ba9d9a3551ab4dd0670d41320487a3e4c4b6ab36cc548fbda593bb8350f",
        "urls": [
          "bzz-raw://29019a2df889e8cc1f8a2cc893d22a8a2896c2417486d2205370517883b0232b",
          "dweb:/ipfs/QmP3WytUTeJcWJJeTiKQM2XyzZ2HY4W2ivevj8QTUPVvZ9"
        ],
        "license": "None"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/ChangedBankAccount.sol",
    "id": 56,
    "exportedSymbols": {
      "ChangedBankAccount": [
        55
      ]
    },
    "nodeType": "SourceUnit",
    "src": "34:885:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "34:23:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 55,
        "nodeType": "ContractDefinition",
        "src": "61:858:0",
        "nodes": [
          {
            "id": 5,
            "nodeType": "VariableDeclaration",
            "src": "96:43:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "27e235e3",
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "131:8:0",
            "scope": 55,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "104:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 3,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "115:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 17,
            "nodeType": "FunctionDefinition",
            "src": "148:86:0",
            "nodes": [],
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "182:52:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "193:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11,
                      "indexExpression": {
                        "expression": {
                          "id": 9,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "202:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "206:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "202:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "193:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 12,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "217:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "221:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "217:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "193:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15,
                  "nodeType": "ExpressionStatement",
                  "src": "193:33:0"
                }
              ]
            },
            "functionSelector": "d0e30db0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "157:7:0",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:0"
            },
            "scope": 55,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43,
            "nodeType": "FunctionDefinition",
            "src": "242:568:0",
            "nodes": [],
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "283:527:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 22,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "298:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25,
                      "indexExpression": {
                        "expression": {
                          "id": 23,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "307:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "311:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "307:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "298:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 26,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "322:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "298:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 40,
                    "nodeType": "Block",
                    "src": "764:39:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 37,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "786:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 36,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "779:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 38,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "779:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 39,
                        "nodeType": "ExpressionStatement",
                        "src": "779:12:0"
                      }
                    ]
                  },
                  "id": 41,
                  "nodeType": "IfStatement",
                  "src": "294:509:0",
                  "trueBody": {
                    "id": 35,
                    "nodeType": "Block",
                    "src": "330:428:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 28,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "345:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 31,
                            "indexExpression": {
                              "expression": {
                                "id": 29,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "354:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 30,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "358:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "354:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "345:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 32,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "369:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "345:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34,
                        "nodeType": "ExpressionStatement",
                        "src": "345:30:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "251:8:0",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "268:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "260:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "259:16:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "283:0:0"
            },
            "scope": 55,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 54,
            "nodeType": "FunctionDefinition",
            "src": "818:98:0",
            "nodes": [],
            "body": {
              "id": 53,
              "nodeType": "Block",
              "src": "870:46:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 48,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "888:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51,
                    "indexExpression": {
                      "expression": {
                        "id": 49,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "897:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "901:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "897:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "888:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 47,
                  "id": 52,
                  "nodeType": "Return",
                  "src": "881:27:0"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "827:10:0",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "837:2:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "861:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "860:9:0"
            },
            "scope": 55,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ChangedBankAccount",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          55
        ],
        "name": "ChangedBankAccount",
        "nameLocation": "70:18:0",
        "scope": 56,
        "usedErrors": []
      }
    ],
    "license": "None"
  },
  "id": 0
}